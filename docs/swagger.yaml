basePath: /api/v1
definitions:
  dto.BlacklistRequestDto:
    properties:
      ban_reason:
        example: Ban Reason
        minLength: 1
        type: string
      phone_number:
        example: "79990004422"
        maxLength: 15
        minLength: 8
        type: string
      user_name:
        example: Test Testov
        minLength: 1
        type: string
      username_who_banned:
        example: SomeUser
        minLength: 1
        type: string
    required:
    - ban_reason
    - phone_number
    - user_name
    - username_who_banned
    type: object
  dto.ResponseId:
    properties:
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
    type: object
  dto.Token:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6ImZ1Y2NjY2NjY2NjY2NjY2siLCJpYXQiOjE1MTYyMzkwMjJ9.0xdPqR3zyab1VTKuhaZnS_PzPT2Q5no2IasmlVek1rE
        type: string
    type: object
  models.BlacklistData:
    properties:
      ban_reason:
        example: Ban Reason
        minLength: 1
        type: string
      date_banned:
        example: "2023-01-15 13:24:49"
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      phone_number:
        example: "79990004422"
        maxLength: 15
        minLength: 8
        type: string
      user_name:
        example: Test Testov
        minLength: 1
        type: string
      username_who_banned:
        example: SomeUser
        minLength: 1
        type: string
    required:
    - ban_reason
    - date_banned
    - phone_number
    - user_name
    - username_who_banned
    type: object
info:
  contact:
    name: Paul Mkvts
  description: This is a service that manages blacklist of users
  title: Blacklist API
  version: "1.0"
paths:
  /auth/token:
    get:
      description: Получение токена авторизации Bearer. Требуется Basic authorization
        для выполнения метода.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Token'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BasicAuth: []
      summary: Get Bearer authorization token (need Basic Authorization first!)
      tags:
      - auth
  /blacklist:
    get:
      description: Поиск пользователя в черном списке по user_name или phone_number
        (требуется только один параметр)
      parameters:
      - description: Get by username only
        in: query
        name: user_name
        type: string
      - description: Get by phone number only
        in: query
        name: phone_number
        type: string
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BlacklistData'
            type: array
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get black list by username or phone_number
      tags:
      - blacklist
  /blacklist/:
    post:
      description: Добавление пользователя в черный список
      parameters:
      - description: Create body
        in: body
        name: reqeust
        required: true
        schema:
          $ref: '#/definitions/dto.BlacklistRequestDto'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ResponseId'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Create user in blacklist
      tags:
      - blacklist
  /blacklist/{id}:
    delete:
      description: Удаление пользователя из черного списка
      parameters:
      - description: Delete by id
        in: path
        name: id
        required: true
        type: string
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get black list by user's phone
      tags:
      - blacklist
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
